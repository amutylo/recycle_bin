<?php
/**
 * @file
 * Contains recyclebin.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_help().
 * @param string $route_name
 * @param RouteMatchInterface $route_match
 *
 * @return string
 */
function recycle_bin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
  // Main module help for the recyclebin module.
    case 'help.page.recyclebin':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provide Recycle Bin functionality via state machine API.') . '</p>';
      return $output;
    default:
  }
}

/**
 * Implements hook_views_pre_view().
 */
function recycle_bin_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() === 'content') {
    $account = \Drupal::currentUser();
    $hide_delete = ($account->id() === 1)? FALSE : TRUE;
    if ($hide_delete) {
      $hundler = $view->getHandler($view->current_display, 'field', 'node_bulk_form');
      $d = 0;
    }
  }
}

/**
 * @param $account
 *
 * @return bool
 */
function recycle_bin_admin_access($account) {
  return ($account->uid === 1)? true : false;
}

/**
 * Implements hook_entity_operation_alter().
 * @param array $operations
 * @param EntityInterface $entity
 */
  function recycle_bin_entity_operation_alter(array &$operations, EntityInterface $entity) {
  // Check if entity has field_state, so such entity cannot be deleted, removing delete button from operations list.;
    $entityType = $entity->getEntityTypeId();
    if ($entityType === 'node') {
      $hasStateField = $entity->get('field_state');
      if ($hasStateField) {
        $state = $hasStateField->first()->value;
        if ($state !== 'recycled') {
          unset($operations["delete"]);
        }
      }
    }
}

/**
 * Alter delete links on node view and edit pages.
 * Implements hook_menu_local_tasks_alter().
 */
function recycle_bin_menu_local_tasks_alter(&$data, $route_name, RefinableCacheableDependencyInterface &$cacheability) {
  $routes = ['entity.node.canonical', 'entity.node.edit_form'];
  if (in_array($route_name, $routes)) {
    $storage = \Drupal::entityTypeManager()->getStorage('node');
    $type = $storage->getEntityType();
    $cacheTags = $type->getListCacheTags();
    $cacheability->addCacheTags($cacheTags);
    unset($data["tabs"][0]["entity.node.delete_form"]);
  }
}
